#include<iostream>
using namespace std;
class Complex
{
private:
	double real;
	double imag;
public:
	Complex()
	{
		real = 0;
		imag = 0;
	}
	Complex(double r, double i)
	{
		real = r;
		imag = i;
	}
	Complex complex_add(Complex &c2);
	void display();
};
Complex Complex::complex_add(Complex &c2)
{
	Complex c;
	c.real = real + c2.real;
	c.imag = imag + c2.imag;
	return c;
}
void Complex::display()
{
	cout<<"("<<real<<","<<imag<<"i)"<<endl;
}
int main()
{
	Complex c1(4,5),c2(5,-10),c3;
	c3 = c1.complex_add(c2);
	cout<<"c1 = ";
	c1.display();
	cout<<"c2 = ";
	c2.display();
	cout<<"c1 + c2= ";
	c3.display();

	return 0;
}




#include<iostream>
using namespace std;
class Complex
{
private:
	double real;
	double imag;
public:
	Complex()
	{
		real = 0;
		imag = 0;
	}
	Complex(double r, double i)
	{
		real = r;
		imag = i;
	}
	Complex operator + (Complex &c2);
	Complex operator - (Complex &c2);
	void display();
};
Complex Complex::operator + (Complex &c2)
{
	Complex c;
	c.real = real + c2.real;
	c.imag = imag + c2.imag;
	return c;
}
Complex Complex::operator - (Complex &c2)
{
	Complex c;
	c.real = real - c2.real;
	c.imag = imag - c2.imag;
	return c;
}
void Complex::display()
{
	cout<<"("<<real<<","<<imag<<"i)"<<endl;
}
int main()
{
	Complex c1(4,5),c2(5,-10),c3;
	
	cout<<"c1 = ";
	c1.display();
	cout<<"c2 = ";
	c2.display();
	c3 = c1 + c2;
	cout<<"c1 + c2= ";
	c3.display();
	c3 = c1 - c2;
	cout<<"c1 - c2= ";
	c3.display();

	return 0;
}






#include<iostream.h>
class Complex
{
private:
	double real;
	double imag;
public:
	Complex()
	{
		real = 0;
		imag = 0;
	}
	Complex(double r, double i)
	{
		real = r;
		imag = i;
	}
	friend Complex operator + (Complex a,Complex b);
	friend Complex operator - (Complex a,Complex b);
	Complex operator * (Complex &c2);
	Complex operator / (Complex &c2);
	void display();
};
Complex operator + (Complex a,Complex b)
{
	return Complex(a.real + b.real ,a.imag + b.imag);
}
Complex operator - (Complex a,Complex b)
{
	return Complex(a.real - b.real ,a.imag - b.imag);
}
Complex Complex::operator * (Complex &c2)
{
	Complex c;
	return Complex(c.real = real * c2.real , c.imag = imag * c2.imag );
}
Complex Complex::operator / (Complex &c2)
{
	Complex c;
	c.real = real / c2.real;
	c.imag = imag / c2.imag;
	return c;
}
void Complex::display()
{
	cout<<"("<<real<<","<<imag<<"i)"<<endl;
}
int main()
{
	Complex c1(4,5),c2(5,-10),c3;
	
	cout<<"c1 = ";
	c1.display();
	cout<<"c2 = ";
	c2.display();
	c3 = c1 + c2;
	cout<<"c1 + c2= ";
	c3.display();
	c3 = c1 - c2;
	cout<<"c1 - c2= ";
	c3.display();
	c3 = c1 * c2;
	cout<<"c1 * c2= ";
	c3.display();
	c3 = c1 / c2;
	cout<<"c1 / c2= ";
	c3.display();


	return 0;
}



#include<iostream.h>
class Complex
{
private:
	double real;
	double imag;
public:
	Complex()
	{
		real = 0;
		imag = 0;
	}
	Complex(double r, double i)
	{
		real = r;
		imag = i;
	}
	friend Complex operator + (Complex a,Complex b);
    friend Complex operator + (int a,Complex b);
	friend Complex operator + (Complex b,int a);
	friend Complex operator - (Complex a,Complex b);
	Complex operator * (Complex &c2);
	Complex operator / (Complex &c2);
	void display();
};
Complex operator + (Complex b,int a)
{
	return Complex(b.real+a,b.imag);
}
Complex operator + (int a,Complex b)
{
	return Complex(a+b.real, b.imag);
}
Complex operator + (Complex a,Complex b)
{
	return Complex(a.real + b.real ,a.imag + b.imag);
}
Complex operator - (Complex a,Complex b)
{
	return Complex(a.real - b.real ,a.imag - b.imag);
}
Complex Complex::operator * (Complex &c2)
{
	Complex c;
	return Complex(c.real = real * c2.real , c.imag = imag * c2.imag );
}
Complex Complex::operator / (Complex &c2)
{
	Complex c;
	c.real = real / c2.real;
	c.imag = imag / c2.imag;
	return c;
}
void Complex::display()
{
	cout<<"("<<real<<","<<imag<<"i)"<<endl;
}
int main()
{
	Complex c1(4,5),c2(5,-10),c3;
	
	cout<<"c1 = ";
	c1.display();
	cout<<"c2 = ";
	c2.display();
	c3 = 3 + c2;
	cout<<"3 + c2= ";
	c3.display();
	c3 = c2+3;
	cout<<"c2 + 3= ";
	c3.display();
	c3 = c1 + c2;
	cout<<"c1 + c2= ";
	c3.display();
	c3 = c1 - c2;
	cout<<"c1 - c2= ";
	c3.display();
	c3 = c1 * c2;
	cout<<"c1 * c2= ";
	c3.display();
	c3 = c1 / c2;
	cout<<"c1 / c2= ";
	c3.display();


	return 0;
}

